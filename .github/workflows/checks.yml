name: Checks
on: [push]

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.9.1
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Run linters
        run: |
          bundle exec rubocop --parallel
          yarn run stylelint "app/**/*.scss"
          bundle exec erblint "app/**/*.erb"
          yarn run eslint "app/**/*.js"
  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run security checks
        run: |
          bundle exec bundler-audit --update
          bundle exec brakeman -q -w2
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: osp_toolbox_test
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.9.1
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          DATABASE_PASSWORD: postgres
          DATABASE_USERNAME: postgres
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
      - uses: nanasess/setup-chromedriver@v1.0.1
      - name: Run tests
        env:
          RAILS_ENV: test
          CODECOV: true
          DATABASE_HOST: localhost
          DATABASE_PASSWORD: postgres
          DATABASE_USERNAME: postgres
        run: bundle exec rspec
  conclusion:
    name: conclusion
    needs: [tests, linters, security]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Result
        run: ${{ needs.tests.result == 'success' && needs.security.result == 'success' && needs.linters.result == 'success' }}